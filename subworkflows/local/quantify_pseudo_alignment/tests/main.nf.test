nextflow_workflow {

    name "Test Workflow QUANTIFY_PSEUDO_ALIGNMENT"
    script "../main.nf"
    workflow "QUANTIFY_PSEUDO_ALIGNMENT"

    tag 'SALMON_QUANT'
    tag 'KALLISTO_QUANT'
    tag 'CUSTOM_TX2GENE'
    tag 'TXIMETA_TXIMPORT'
    tag 'SUMMARIZEDEXPERIMENT_SUMMARIZEDEXPERIMENT'

    test("salmon") {

        setup {
            run("SALMON_INDEX") {
                script "../../../../modules/nf-core/salmon/index/main.nf"
                process {
                    """
                    input[0] = file("https://raw.githubusercontent.com/nf-core/test-datasets/7f1614baeb0ddf66e60be78c3d9fa55440465ac8/reference/genome.fasta", checkIfExists: true)
                    input[1] = file("https://raw.githubusercontent.com/nf-core/test-datasets/7f1614baeb0ddf66e60be78c3d9fa55440465ac8/reference/transcriptome.fasta", checkIfExists: true)
                    """
                }
            }
        }

        when {
            workflow {
                """
                input[0]  = [
                    [ id: 'samplesheet' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/7f1614baeb0ddf66e60be78c3d9fa55440465ac8/samplesheet/v3.10/samplesheet_test.csv", checkIfExists: true)
                ]
                input[1]  = [
                    [ id: 'test' ],
                    [
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/rnaseq/testdata/GSE110004/SRR6357070_1.fastq.gz", checkIfExists: true),
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/rnaseq/testdata/GSE110004/SRR6357070_2.fastq.gz", checkIfExists: true)
                    ]
                ]
                input[2]  = SALMON_INDEX.out.index
                input[3]  = Channel.of(file("https://raw.githubusercontent.com/nf-core/test-datasets/7f1614baeb0ddf66e60be78c3d9fa55440465ac8/reference/transcriptome.fasta", checkIfExists: true))
                input[4]  = Channel.of(file("https://raw.githubusercontent.com/nf-core/test-datasets/7f1614baeb0ddf66e60be78c3d9fa55440465ac8/reference/genome.fasta", checkIfExists: true))
                input[5]  = 'gene_id'
                input[6]  = 'gene_name'
                input[7]  = 'salmon'
                input[8]  = false
                input[9]  = 'A'
                input[10] = null
                input[11] = null
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out).match() }
            )
        }

    }

    test("kallisto") {

        setup {
            run("KALLISTO_INDEX") {
                script "../../../../modules/nf-core/kallisto/index/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [ id:'transcriptome' ], // meta map
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/7f1614baeb0ddf66e60be78c3d9fa55440465ac8/reference/transcriptome.fasta", checkIfExists: true)
                    ])
                    """
                }
            }
        }


        when {
            workflow {
                """
                input[0]  = [
                    [ id: 'samplesheet' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/7f1614baeb0ddf66e60be78c3d9fa55440465ac8/samplesheet/v3.10/samplesheet_test.csv", checkIfExists: true)
                ]
                input[1]  = [
                    [ id: 'test' ],
                    [
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/rnaseq/testdata/GSE110004/SRR6357070_1.fastq.gz", checkIfExists: true),
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/rnaseq/testdata/GSE110004/SRR6357070_2.fastq.gz", checkIfExists: true)
                    ]
                ]
                input[2]  = KALLISTO_INDEX.out.index
                input[3]  = Channel.of(file("https://raw.githubusercontent.com/nf-core/test-datasets/7f1614baeb0ddf66e60be78c3d9fa55440465ac8/reference/transcriptome.fasta", checkIfExists: true))
                input[4]  = Channel.of(file("https://raw.githubusercontent.com/nf-core/test-datasets/7f1614baeb0ddf66e60be78c3d9fa55440465ac8/reference/genome.fasta", checkIfExists: true))
                input[5]  = 'gene_id'
                input[6]  = 'gene_name'
                input[7]  = 'kallisto'
                input[8]  = null
                input[9]  = null
                input[10] = []
                input[11] = []
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out).match() }
            )
        }

    }

}
