nextflow_pipeline {

    name "Test pipeline without a group type for featureCounts"
    script "../main.nf"

    test("Params: --featurecounts_group_type false") {

        when {
            params {
                outdir = "$outputDir"
                featurecounts_group_type = false
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    // These files are not stable
                    file("${params.outdir}/bbsplit/RAP1_IAA_30M_REP1.stats.txt").name,
                    file("${params.outdir}/bbsplit/RAP1_UNINDUCED_REP1.stats.txt").name,
                    file("${params.outdir}/bbsplit/RAP1_UNINDUCED_REP2.stats.txt").name,
                    file("${params.outdir}/bbsplit/WT_REP1.stats.txt").name,
                    file("${params.outdir}/bbsplit/WT_REP2.stats.txt").name
                ).match("bbsplit") },
                { assert snapshot(
                    path("${params.outdir}/custom/out/genome_gfp.fasta"),
                    path("${params.outdir}/custom/out/genome_gfp.gtf")
                ).match("references") },
                { assert snapshot(
                    path("${params.outdir}/fastqc/raw/RAP1_IAA_30M_REP1_raw_1_fastqc.html"),
                    path("${params.outdir}/fastqc/raw/RAP1_IAA_30M_REP1_raw_2_fastqc.html"),
                    path("${params.outdir}/fastqc/raw/RAP1_UNINDUCED_REP1_raw_fastqc.html"),
                    path("${params.outdir}/fastqc/raw/RAP1_UNINDUCED_REP2_raw_fastqc.html"),
                    path("${params.outdir}/fastqc/raw/WT_REP1_raw_1_fastqc.html"),
                    path("${params.outdir}/fastqc/raw/WT_REP1_raw_2_fastqc.html"),
                    path("${params.outdir}/fastqc/raw/WT_REP2_raw_1_fastqc.html"),
                    path("${params.outdir}/fastqc/raw/WT_REP2_raw_2_fastqc.html"),
                    // ZIPs are not stable
                    file("${params.outdir}/fastqc/raw/RAP1_IAA_30M_REP1_raw_1_fastqc.zip").name,
                    file("${params.outdir}/fastqc/raw/RAP1_IAA_30M_REP1_raw_2_fastqc.zip").name,
                    file("${params.outdir}/fastqc/raw/RAP1_UNINDUCED_REP1_raw_fastqc.zip").name,
                    file("${params.outdir}/fastqc/raw/RAP1_UNINDUCED_REP2_raw_fastqc.zip").name,
                    file("${params.outdir}/fastqc/raw/WT_REP1_raw_1_fastqc.zip").name,
                    file("${params.outdir}/fastqc/raw/WT_REP1_raw_2_fastqc.zip").name,
                    file("${params.outdir}/fastqc/raw/WT_REP2_raw_1_fastqc.zip").name,
                    file("${params.outdir}/fastqc/raw/WT_REP2_raw_2_fastqc.zip").name
                ).match("fastqc/raw") },
                { assert snapshot(
                    path("${params.outdir}/fastqc/trim/RAP1_IAA_30M_REP1_trimmed_1_val_1_fastqc.html"),
                    path("${params.outdir}/fastqc/trim/RAP1_IAA_30M_REP1_trimmed_2_val_2_fastqc.html"),
                    path("${params.outdir}/fastqc/trim/RAP1_UNINDUCED_REP1_trimmed_trimmed_fastqc.html"),
                    path("${params.outdir}/fastqc/trim/RAP1_UNINDUCED_REP2_trimmed_trimmed_fastqc.html"),
                    path("${params.outdir}/fastqc/trim/WT_REP1_trimmed_1_val_1_fastqc.html"),
                    path("${params.outdir}/fastqc/trim/WT_REP1_trimmed_2_val_2_fastqc.html"),
                    path("${params.outdir}/fastqc/trim/WT_REP2_trimmed_1_val_1_fastqc.html"),
                    path("${params.outdir}/fastqc/trim/WT_REP2_trimmed_2_val_2_fastqc.html"),
                    // ZIPs are not stable
                    file("${params.outdir}/fastqc/trim/RAP1_IAA_30M_REP1_trimmed_1_val_1_fastqc.zip").name,
                    file("${params.outdir}/fastqc/trim/RAP1_IAA_30M_REP1_trimmed_2_val_2_fastqc.zip").name,
                    file("${params.outdir}/fastqc/trim/RAP1_UNINDUCED_REP1_trimmed_trimmed_fastqc.zip").name,
                    file("${params.outdir}/fastqc/trim/RAP1_UNINDUCED_REP2_trimmed_trimmed_fastqc.zip").name,
                    file("${params.outdir}/fastqc/trim/WT_REP1_trimmed_1_val_1_fastqc.zip").name,
                    file("${params.outdir}/fastqc/trim/WT_REP1_trimmed_2_val_2_fastqc.zip").name,
                    file("${params.outdir}/fastqc/trim/WT_REP2_trimmed_1_val_1_fastqc.zip").name,
                    file("${params.outdir}/fastqc/trim/WT_REP2_trimmed_2_val_2_fastqc.zip").name
                ).match("fastqc/trim") },
                { assert snapshot(
                    UTILS.removeNextflowVersion("$outputDir/pipeline_info/nf_core_rnaseq_software_mqc_versions.yml")
                ).match("versions") }
            )
        }
    }

    test("Params: --featurecounts_group_type false - stub") {

        options "-stub"

        when {
            params {
                outdir = "$outputDir"
                featurecounts_group_type = false
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    UTILS.removeNextflowVersion("$outputDir/pipeline_info/nf_core_rnaseq_software_mqc_versions.yml"),
                    file("${params.outdir}/custom/out/genome_gfp.fasta").name,
                    file("${params.outdir}/custom/out/genome_gfp.gtf").name,
                    file("${params.outdir}/fastqc/raw/RAP1_IAA_30M_REP1_raw.html").name,
                    file("${params.outdir}/fastqc/raw/RAP1_IAA_30M_REP1_raw.zip").name,
                    file("${params.outdir}/fastqc/raw/RAP1_UNINDUCED_REP1_raw.html").name,
                    file("${params.outdir}/fastqc/raw/RAP1_UNINDUCED_REP1_raw.zip").name,
                    file("${params.outdir}/fastqc/raw/RAP1_UNINDUCED_REP2_raw.html").name,
                    file("${params.outdir}/fastqc/raw/RAP1_UNINDUCED_REP2_raw.zip").name,
                    file("${params.outdir}/fastqc/raw/WT_REP1_raw.html").name,
                    file("${params.outdir}/fastqc/raw/WT_REP1_raw.zip").name,
                    file("${params.outdir}/fastqc/raw/WT_REP2_raw.html").name,
                    file("${params.outdir}/fastqc/raw/WT_REP2_raw.zip").name,
                    file("${params.outdir}/multiqc/star_salmon/multiqc_report.html").name,
                    file("${params.outdir}/trimgalore/RAP1_IAA_30M_REP1_trimmed_1.fastq.gz_trimming_report.txt").name,
                    file("${params.outdir}/trimgalore/RAP1_IAA_30M_REP1_trimmed_2.fastq.gz_trimming_report.txt").name,
                    file("${params.outdir}/trimgalore/RAP1_UNINDUCED_REP1_trimmed.fastq.gz_trimming_report.txt").name,
                    file("${params.outdir}/trimgalore/RAP1_UNINDUCED_REP2_trimmed.fastq.gz_trimming_report.txt").name,
                    file("${params.outdir}/trimgalore/WT_REP1_trimmed_1.fastq.gz_trimming_report.txt").name,
                    file("${params.outdir}/trimgalore/WT_REP1_trimmed_2.fastq.gz_trimming_report.txt").name,
                    file("${params.outdir}/trimgalore/WT_REP2_trimmed_1.fastq.gz_trimming_report.txt").name,
                    file("${params.outdir}/trimgalore/WT_REP2_trimmed_2.fastq.gz_trimming_report.txt").name
                ).match() }
            )
        }
    }
}
