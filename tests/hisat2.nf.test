nextflow_pipeline {

    name "Test pipeline with HISAT2 aligner"
    script "../main.nf"

    test("Params: --aligner hisat2") {

        when {
            params {
                outdir = "$outputDir"
                aligner = 'hisat2'
            }
        }

        then {
            def file_complement = UTILS.getAllFilesFromDir(params.outdir, null, UTILS.exclusionRegexesForUnstableFileNames)
            def snapshottable_files = UTILS.getAllFilesFromDir(params.outdir, UTILS.snapshottablePatterns, UTILS.exclusionRegexesForUnstableFileContents)

            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    UTILS.removeNextflowVersion("$outputDir/pipeline_info/nf_core_rnaseq_software_mqc_versions.yml"),
                    file_complement.collect { it.getName() },
                    snapshottable_files
                ).match() }
            )
        }
    }

    test("Params: --aligner hisat2 - stub") {

        options "-stub"

        when {
            params {
                outdir = "$outputDir"
                aligner = 'hisat2'
            }
        }

        then {
            def file_complement = UTILS.getAllFilesFromDir(params.outdir, null, UTILS.exclusionRegexesForUnstableFileNames)
            def snapshottable_files = UTILS.getAllFilesFromDir(params.outdir, UTILS.snapshottablePatterns, UTILS.exclusionRegexesForUnstableFileContents)

            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    UTILS.removeNextflowVersion("$outputDir/pipeline_info/nf_core_rnaseq_software_mqc_versions.yml"),
                    file_complement.collect { it.getName() },
                    snapshottable_files
                ).match() }
            )
        }
    }
}
