process {

    // Apply software overrides for ARM compatibility
    
    withName: '.*:ALIGN_STAR:STAR_ALIGN_IGENOMES' {
        conda = 'seqera::star=2.6.1d bioconda::samtools=1.21 conda-forge::gawk=5.1.0'
        //conda = 'seqera::star=2.6.1d bioconda::samtools=1.10 conda-forge::gawk=5.1.0'
    }
    
    withName: 'STAR_GENOMEGENERATE_IGENOMES' {
        conda = 'bioconda::star bioconda::samtools=1.21 conda-forge::gawk=5.1.0'
        //conda = 'seqera::star=2.6.1d bioconda::samtools=1.10 conda-forge::gawk=5.1.0'
    }
    
    withName: 'BBSPLIT' {
        conda = 'bioconda::bbmap' 
        // conda = 'bioconda::bbmap=39.01'
    }
    
    withName: 'CAT_FASTQ' {
        conda = 'conda-forge::coreutils'
        //conda = 'conda-forge::coreutils=8.30'
    }
    
    withName: 'CAT_ADDITIONAL_FASTA' {
        conda = 'conda-forge::python'
        //conda = 'conda-forge::coreutils=3.9.5'
    }
    
    withName: 'CUSTOM_GETCHROMSIZES' {
        conda = 'bioconda::samtools=1.21'
        //conda = 'bioconda::samtools=1.20 bioconda::htslib=1.20'
    }
    
    withName: 'CUSTOM_TX2GENE' {
        conda = 'python=3.13.0'
        //conda = 'python=3.9.5'
    }
    
    withName: 'FASTP' {
        conda = 'bioconda::fastp'
        //conda = 'bioconda::fastp=0.23.4'
    }
    
    withName: 'FQ_SUBSAMPLE' {
        conda = 'bioconda::fq'
        //conda = 'bioconda::fq=0.9.1'
    }
    
    withName: 'GFFREAD' {
        conda = 'bioconda::gffread'
        //conda = 'bioconda::gffread=0.12.7'
    }
    
    withName: 'GUNZIP' {
        conda = 'conda-forge::sed'
        //conda = 'conda-forge::grep=3.11 conda-forge::sed=4.8 conda-forge::tar=1.34'
    }
    
    withName: 'HISAT2_ALIGN' {
        conda = 'bioconda::hisat2 bioconda::samtools'
        //conda = 'bioconda::hisat2=2.2.1 bioconda::samtools=1.16.1'
    }
    
    withName: 'HISAT2_BUILD|HISAT2_EXTRACTSPLICESITES' {
        conda = 'bioconda::hisat2'
        //conda = 'bioconda::hisat2=2.2.1'
    }
    
    withName: 'KALLISTO_INDEX|KALLISTO_QUANT' {
        conda = 'bioconda::kallisto'
        //conda = 'bioconda::kallisto=0.48.0'
    }
    
    withName: 'PICARD_MARKDUPLICATES' {
        conda = 'bioconda::picard=3.3.0'
        //conda = 'bioconda::picard=3.1.1'
    }
    
    withName: 'PRESEQ_LCEXTRAP' {
        conda = 'bioconda::preseq'
        //conda = 'bioconda::preseq=3.1.2'
    }
    
    withName: 'RSEM_CALCULATEEXPRESSION' {
        conda = 'bioconda::rsem bioconda::star'
        //conda = 'bioconda::rsem=1.3.3 bioconda::star=2.7.10a'
    }
    
    withName: 'RSEM_PREPAREREFERENCE' {
        conda = 'seqera::rsem seqera::star=2.6.1d'
        //conda = 'bioconda::rsem=1.3.3 bioconda::star=2.7.10a'
    }
    
    withName: 'SALMON_INDEX|SALMON_QUANT' {
        conda = 'bioconda::salmon=1.10.3'
        //conda = 'bioconda::salmon=1.10.1'
    }
    
    withName: 'SAMTOOLS_FLAGSTAT|SAMTOOLS_IDXSTATS|SAMTOOLS_INDEX|SAMTOOLS_SORT|SAMTOOLS_STATS' {
        conda = 'bioconda::samtools=1.21 bioconda::htslib'
        //conda = 'bioconda::samtools=1.20 bioconda::htslib'
    }
    
    withName: 'SORTMERNA' {
        conda = 'bioconda::sortmerna'
        //conda = 'bioconda::sortmerna=4.3.6'
    }
    
    withName: 'STAR_ALIGN|STAR_GENOMEGENERATE' {
        conda = 'bioconda::star bioconda::samtools bioconda::htslib conda-forge::gawk'
        //conda = 'bioconda::star=2.7.10a bioconda::samtools=1.18 bioconda::htslib=1.18 conda-forge::gawk=5.1.0'
    }
    
    withName: 'STRINGTIE_STRINGTIE' {
        conda = 'bioconda::stringtie=2.2.3'
        //conda = 'bioconda::stringtie=2.2.1'
    }
    
    withName: 'SUBREAD_FEATURECOUNTS' {
        conda = 'bioconda::subread=2.0.6'
        //conda = 'bioconda::subread=2.0.1'
    }
    
    withName: 'TRIMGALORE' {
        conda = 'bioconda::trim-galore=0.6.10 bioconda::cutadapt=4.9'
        //conda = 'bioconda::trim-galore=0.6.7 bioconda::cutadapt=3.4'
    }

    withName: 'UCSC_BEDGRAPHTOBIGWIG' {
        conda = 'bioconda::ucsc-bedgraphtobigwig=469'
        //conda = 'bioconda::ucsc-bedgraphtobigwig=445'
    }
    
    withName: 'UMITOOLS_DEDUP|UMITOOLS_EXTRACT|UMITOOLS_PREPAREFORRSEM' {
        conda = 'bioconda::umi_tools'
        //conda = 'bioconda::umi_tools=1.1.5'
    }
    
    withName: 'UNTAR' {
        conda = 'conda-forge::grep conda-forge::sed conda-forge::tar'
        //conda = 'conda-forge::grep=3.11 conda-forge::sed=4.8 conda-forge::tar=1.34'
    }
}  
